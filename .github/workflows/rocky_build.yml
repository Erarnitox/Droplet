name: Build Project on Rocky Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9  # Use Rocky Linux 9 as the container environment

    steps:
      - name: Install dependencies
        run: |
          dnf install -y epel-release --allowerasing  # Enable EPEL repository for extra packages
          dnf update -y --allowerasing
          dnf install -y wget curl jq git zip unzip openssl openssl-devel openssl-libs zlib zliv-devel --allowerasing
          
      - name: Install CMake
        run: |
          CMAKE_VERSION=$(curl -s https://api.github.com/repos/Kitware/CMake/releases/latest | jq -r ".tag_name" | sed 's/v//')
          wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh
          chmod +x cmake-${CMAKE_VERSION}-linux-x86_64.sh
          ./cmake-${CMAKE_VERSION}-linux-x86_64.sh --skip-license --prefix=/usr/local
          rm cmake-${CMAKE_VERSION}-linux-x86_64.sh
          
      - name: Install Ninja
        run: |
          NINJA_VERSION=1.11.0  # Specify the desired version of Ninja
          wget https://github.com/ninja-build/ninja/releases/download/v${NINJA_VERSION}/ninja-linux.zip
          unzip ninja-linux.zip
          chmod +x ninja
          mv ninja /usr/local/bin/
          rm ninja-linux.zip

      - name: Install Clang
        run: |
          dnf install -y clang --allowerasing

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure and Build with CMake
        env:
          CC: clang
          CXX: clang++
          OPENSSL_ROOT_DIR: /usr/include/openssl
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          cmake --preset github
          cmake --build build
